---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

type Props = {
  project: CollectionEntry<"projects">;
};

const { project } = Astro.props;
const { Content } = await project.render();
export const prerender = true;
const fulltitle =project.data.title + " | Ghita.L";
const description = project.data.description;
---

<Layout title={fulltitle} , description={description}>
  <main class="project mx-auto flex md:w-10/12 w-11/12 flex-col gap-4 pt-12">
    <div class="flex flex-row justify-between">
      <a href="/projects" onclick="navigateTo(event, '/projects')" class="flex flex-row align-middle items-center gap-1 group">
        <Icon name="ic:round-arrow-back" size={22} class="transform transition-transform duration-300 group-hover:-translate-x-2"/>
        <h4 class="text-lg">All Projects</h4>
      </a>
      <div role="list" class="flex-grow flex mr-32 gap-2 justify-center">
        {
          project.data.github && (
            <a
              href={project.data.github}
              target="_blank"
              rel="noopener noreferrer"
              style={{ textDecoration: "none" }}
              class="text-teal-100 hover:text-teal-500 cursor-pointer"
            >
              <Icon name="iconoir:github" size={26} />
            </a>
          )
        }
        {project.data.github && project.data.website && <> / </>}
        {
          project.data.website && (
            <a
              href={project.data.website}
              target="_blank"
              rel="noopener noreferrer"
              style={{ textDecoration: "none" }}
              class="text-teal-100 hover:text-teal-500 cursor-pointer "
            >
              <Icon name="iconoir:www" size={26} />
            </a>
          )
        }
      </div>
    </div>
    
    {
      project.data.image && project.data.image.src && (
        <img
          src={project.data.image.src}
          class="h-auto w-full md:w-4/4 object-cover rounded-lg mx-auto"
          alt={project.data.image.alt}
          transition:name={`${project.data.image.src} image`}
          loading="lazy"
        />
      )
    }

    {
      project.data.technologies && (
        <div class="flex flex-row gap-2 justify-center">
          {project.data.technologies.map(
            (tech: {
              route: string | null | undefined;
              name: string | null | undefined;
            }) => {
              return (
                <img
                  src={tech.route}
                  alt={`${tech.name}`}
                  title={tech.name}
                  class="h-7"
                />
              );
            },
          )}
        </div>
      )
    }
    <Content />
    <article>
      <footer class="flex flex-col gap-2 mt-24 md:-mb-16 items-center">
        <p class="text-base text-neutral-400 font-semibold">
          Built by Ghita Loukili
        </p>
        <p class="text-sm text-neutral-400">
          Design based on <a
            href="https://brittanychiang.com"
            target="_blank"
            rel="noopener noreferrer"
            class="hover:text-teal-500 transition duration-300 ease-in-out cursor-pointer"
            >Brittany Chiang portfolio</a
          >
        </p>
      </footer>
    </article>
  </main>
</Layout>
<script>
  let lastScrollTop = 0;
  const headerContainer = document.getElementById('header-container')!;

  window.addEventListener('scroll', function() {
    const scrollTop = window.scrollY || document.documentElement.scrollTop;
    if (scrollTop > lastScrollTop) {
      // Scrolling down
      headerContainer.style.transform = 'translateY(-100%)';
    } else {
      // Scrolling up
      headerContainer.style.transform = 'translateY(0)';
    }
    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // For Mobile or negative scrolling
  });
</script>